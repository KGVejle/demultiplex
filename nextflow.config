singularity.enabled=true
conda.enabled=true
date=new Date().format( 'yyMMdd' )
user="$USER"
runID="${date}.${user}"

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')

params {
    outdir                   = "${launchDir.baseName}.Results"
    help                     =false
    panel                    =null
    samplesheet              =null
    preprocessOnly           =null
    keepwork                 =null
    nomail                   =null
    hg38v1                   =null
    hg38v2                   =null
    cram                     =null
    fastq                    =null
    spring                   =null
    skipJointGenotyping      =null
    fastqInput               =null
    skipSV                   =null
    skipVariants             =null
    skipQC                   =null
    skipSTR                  =null
    skipSMN                  =null
    subdirs                  =null
    gatk                     =null
    copyCram                 =null
    single                   =null
    server                   =null
    genome                   = "hg38"
}

timeline {
    enabled = true
    file    = "${params.outdir}/runInfo/${trace_timestamp}_Nextflow_timeline.html"
}

report {
    enabled = true
    file    = "${params.outdir}/runInfo/${trace_timestamp}_Nextflow_report.html"
}

trace {
    enabled = true
    file    = "${params.outdir}/runInfo/${trace_timestamp}_Nextflow_trace.txt"
}

///////////////// Global process default settings //////////////////////

process {
    executor            = 'local'
    scratch             = false
    cpus                = 8
    errorStrategy       = 'ignore'

    withLabel: 'low' {
        cpus            = 4
        maxForks        = 30
        errorStrategy   = 'ignore'
    }

    withLabel: 'medium' {
        cpus            = 8
        maxForks        = 20
        errorStrategy   = 'ignore'
    }

    withLabel: 'high' {
        cpus            = 16
        maxForks        = 8
        errorStrategy   = 'ignore'
    }

    withLabel: 'veryHigh' {
        cpus            = 48
        maxForks        = 6
        errorStrategy   = 'terminate'
    }

    withName: 'haplotypecallerSplitIntervals' {
        maxForks    = 50
    }
}

   
////////////////////// Profiles ////////////////////////

profiles {

    slurm {
        workDir = "/lnx01_data2/slurmWork/${user}/${trace_timestamp}_${launchDir.baseName}"

        process {
            cpus                = 16
            memory              = '16 GB'
            time                = '48h'
            environment         = ['TMPDIR': "/fast/TMP/TMP.${user}"]
            executor            = 'slurm'
            queue               = 'compute'
            scratch             = true
            shell               = ['/bin/bash', '-l']
            maxForks            = 30
            maxRetries          = 1

            withLabel: 'low' {
                cpus            = 4
                memory          = '8 GB'
                time            = '24h'
                maxRetries      = 1
                errorStrategy   = 'ignore'
            }

            withLabel: 'medium' {
                cpus            = 8
                memory          = '16 GB'
                time            = '48h'
                maxRetries      = 1
                errorStrategy   = 'ignore'
            }

            withLabel: 'high' {
                cpus            = 32
                memory          = '32 GB'
                time            = '72h'
                maxRetries      = 2
                errorStrategy   = 'ignore'
            }

            withLabel: 'veryHigh' {
                cpus            = 64
                memory          = '32 GB'
                time            = '72h'
                maxRetries      = 2
                errorStrategy   = 'terminate'
            }
            // NAMED OVERWRITES:
            withName: 'haplotypecallerSplitIntervals' {
                cpus        = 4
                memory      = '8 GB'
            }
        }
    }
}


